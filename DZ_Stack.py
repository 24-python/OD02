# Объявление класса Stack (стек)
class Stack:
    # Конструктор класса (инициализация объекта)
    def __init__(self):
        self.items = []  # Создаем пустой список для хранения элементов стека

    # Метод проверки стека на пустоту
    def is_empty(self):
        return self.items == []  # Возвращает True, если стек пуст, иначе False

    # Метод добавления элемента в стек
    def push(self, item):
        self.items.append(item)  # Добавляем элемент в конец списка (вершина стека)

    # Метод удаления и возврата верхнего элемента стека
    def pop(self):
        return self.items.pop()  # Удаляем и возвращаем последний элемент списка

    # Метод просмотра верхнего элемента без удаления
    def peek(self):
        return self.items[-1]  # Возвращаем последний элемент списка (вершину стека)

# Создаем экземпляр стека
stack = Stack()

# Проверяем, пуст ли стек (выведет True)
print(stack.is_empty())

# Добавляем элементы в стек
stack.push("Иван")  # Стек: [Иван]
stack.push("Марья")  # Стек: [Иван, Марья]
stack.push("Семен")  # Стек: [Иван, Марья, Семен]

# Проверяем, пуст ли стек (теперь выведет False)
print(stack.is_empty())

# Выводим верхний элемент стека без удаления (выведет Семен)
print(stack.peek())

stack.push("Сидор")  # Стек: [Иван, Марья, Семен, Сидор]

print("Весь стек:", stack.items)

# Удаляем верхний элемент стека (выведет Сидор)
print(stack.pop())