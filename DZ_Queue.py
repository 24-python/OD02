# Определение класса Queue (очередь)
class Queue:
    # Конструктор класса (инициализация)
    def __init__(self):
        self.items = []  # Создаем пустой список для хранения элементов очереди

    # Проверка, пуста ли очередь
    def is_empty(self):
        return self.items == []  # Возвращает True, если очередь пуста

    # Добавление элемента в очередь (в начало списка)
    def enqueue(self, item):
        self.items.insert(0, item)  # Вставка элемента в позицию 0 (голова очереди)

    # Удаление и возврат элемента из очереди (из конца списка)
    def dequeue(self):
        return self.items.pop()  # Удаляет последний элемент (FIFO - First In, First Out)

    # Получение текущего размера очереди
    def size(self):
        return len(self.items)  # Возвращает количество элементов в очереди


# Создание экземпляра очереди
queue = Queue()

# Проверка, пуста ли очередь (True, так как очередь только создана)
print(queue.is_empty())  # Выведет: True

# Добавление элементов в очередь
queue.enqueue(1)  # Очередь: [1]
queue.enqueue(2)  # Очередь: [2, 1]
queue.enqueue(3)  # Очередь: [3, 2, 1]
queue.enqueue(4)  # Очередь: [4, 3, 2, 1]
queue.enqueue(5)  # Очередь: [5, 4, 3, 2, 1]

# Проверка, пуста ли очередь (теперь False)
print(queue.is_empty())  # Выведет: False

# Вывод текущего размера очереди
print(queue.size())  # Выведет: 5

# Удаление и вывод первого пришедшего элемента (FIFO)
print(queue.dequeue())  # Удалит и вернет 1 (очередь станет: [5, 4, 3, 2])

# Вывод размера очереди после удаления элемента
print(queue.size())  # Выведет: 4